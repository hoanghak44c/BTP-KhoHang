<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdExport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABKRJREFUSEutVutL
        m1cYj/p5n4YyGPsH3JfBPm3DavXLGEzGQHCTMTrYB+uQKY7NeYkUO8ZoC9uqDtda0apBjM5GjfUSpdbo
        jKa2JibOeEneXMzF3N9czOW357w2bWzstLADP07e83Ce33l+z3meE5HofxoGg+Fdq9Waey53y8vLF3me
        V4bDYSWbT0MwGFQGAgGl3+9XOhwOFSGq1WpbzkUgk8nK8QojFArB4/FgdXX1+pkE5PzNyclJ8dHRkUCR
        TCYzwGzMKUUAr9eLg4MDOJ1OrK2t/XImgVqt7nS5XAmS51SCeDyOSCQCkgg+nw9utxuk/fkJtra2JLFY
        TDjhixEkEglEo1HBRtoLstBhYDabhZkOd3YEu7u7d9npKLEZBIyYRZaS5vDwEJRccBz3agTMASM5ORJI
        xKOIRkII8QEE/B543E44HXZwJpNAcK4c6HS6bpvNCh8lzxs8gsUVBucIw+IIgjvwYd/ixrbRBe22DTqD
        BYY9Dvt7e0TgZBK1/meSBwcH39BsPB7f3Obw14Idi5ogHjwJYlHLY0UfgoqwouOxpGXrfijUPkyp3Oif
        MoGzOigC1d2BgYG3MkjW19eLKcRxksUYjUTitsMYpAs+chLGQw1BG8KDDR5zT3go1nnMPAphao2HXMVj
        7G8ePdNuOD0RulXeJOXFSjfroclkqisrK8sRlZaWvkaLhnS9Xb4Ybk04cWd8D733jehR2HF71o7O+wfo
        kNvQPnGAmzI72mUu/DHmwe8jLrj9x3WTPignpaL+/v4P2e1IXUkqLXj5BFoHLahqV+ObTjUqu3SovKPH
        t73/oKprC1+26VB+Q49PftLj09Yd/HDbBh//3AcrTjboRraLhoaGKlOsx4YkAuEEro+78J3EjB9HODTd
        M6F5zIRWuQXie2bUSkyo6jbhUrsJn90w4/suB/whRvC86plPkkkqkkgkl1kBpUcQjQPiYQ4fX1tDRYca
        X/2pxte3aKZovqDvst/U+OhnNS40qvF21Roud3AIs01PCVIH3t/fHxZR1itZZbIKZUWUwiNTAL1KC/qX
        OAytcBhWcZDSLFnm0LPIoXOOw68THK6NWumWeWlf6MR+RrK9vS0VCFg/YWDFwsCKLH4UQZIKKxF7CcjG
        7MlEFPEYVTftYXtZ02NgB9br9ccENpsNDBaLRWhc9B5genoas7MzTzFLcyYUtKZQzGJmZgYqlUrYy/oS
        SSM0Qo1GIxX19fVVGo1GYZGSIjjOy8tDVlYWcnJykJ2djWz6zb6pgF6K3NxcIlMIBGm9SSrq7u6+lCJg
        htHRUVRUVODKlStoaWmBWCxGc3MzmpqaBDQ2Nj5DQ0MDGNhaSUkJRkZGBBXYYVkjpDqQierq6t6jELmF
        hYXA/Py8Ty6Xe+jpYxX5TM+UrmxO1zm1zvJHr1mCHisP8zE3N+dfWlryU+u5ytpGdn5+/jvFxcUXabxP
        kt1M9flU0tNnu90uEJ9ma2tru1pUVPRBYWFhUUFBwQXy/XpGX6JkTdA/BFAUGaBrh42NDQGbm5snsLOz
        wxLde9aTmVNbW1tSXV39OaH8RdTU1JQznGZje+rr6wuZIukk/wLDWPg26iRKRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>